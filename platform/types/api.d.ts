/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/org/{orgId}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all users */
        get: operations["listUsers"];
        put?: never;
        /** Create a user */
        post: operations["createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/org/{orgId}/user/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get info for a User */
        get: operations["getUser"];
        put?: never;
        post?: never;
        /** Delete a specific user */
        delete: operations["deleteUser"];
        options?: never;
        head?: never;
        /** Update a User with new properties */
        patch: operations["updateUser"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        UserId: {
            /** @example 0fcdec2eb49045cc8b481c15e0f1277c */
            id: string;
        };
        UserProperties: {
            /** @example Mark */
            firstName: string;
            /** @example Miller */
            lastName: string;
            /** @example I help make a better internet at Cloudflare! */
            funFact?: string;
        };
        User: components["schemas"]["UserId"] & components["schemas"]["UserProperties"];
        Users: components["schemas"]["User"][];
    };
    responses: never;
    parameters: {
        orgId: string;
        userId: components["schemas"]["UserId"];
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listUsers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgId: components["parameters"]["orgId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns an array of Users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Users"];
                };
            };
            /** @description Organization not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgId: components["parameters"]["orgId"];
            };
            cookie?: never;
        };
        /** @description Info for a new User */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserProperties"];
            };
        };
        responses: {
            /** @description A User was created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Organization not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgId: components["parameters"]["orgId"];
                userId: components["parameters"]["userId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns Info for a User */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgId: components["parameters"]["orgId"];
                userId: components["parameters"]["userId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The User was deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgId: components["parameters"]["orgId"];
                userId: components["parameters"]["userId"];
            };
            cookie?: never;
        };
        /** @description User properties to update */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserProperties"];
            };
        };
        responses: {
            /** @description Returns the newly updated User info */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
